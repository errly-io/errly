// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package database

import (
	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type ApiKeys struct {
	ID         uuid.UUID          `db:"id" json:"id"`
	Name       string             `db:"name" json:"name"`
	KeyHash    string             `db:"key_hash" json:"key_hash"`
	KeyPrefix  string             `db:"key_prefix" json:"key_prefix"`
	ProjectID  uuid.UUID          `db:"project_id" json:"project_id"`
	Scopes     []string           `db:"scopes" json:"scopes"`
	ExpiresAt  pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	LastUsedAt pgtype.Timestamptz `db:"last_used_at" json:"last_used_at"`
	CreatedAt  pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt  pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Projects struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Slug        string             `db:"slug" json:"slug"`
	SpaceID     uuid.UUID          `db:"space_id" json:"space_id"`
	Platform    string             `db:"platform" json:"platform"`
	Framework   pgtype.Text        `db:"framework" json:"framework"`
	Description pgtype.Text        `db:"description" json:"description"`
	Settings    []byte             `db:"settings" json:"settings"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type Spaces struct {
	ID          uuid.UUID          `db:"id" json:"id"`
	Name        string             `db:"name" json:"name"`
	Slug        string             `db:"slug" json:"slug"`
	Description pgtype.Text        `db:"description" json:"description"`
	Settings    []byte             `db:"settings" json:"settings"`
	CreatedAt   pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt   pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}

type UserSessions struct {
	ID           uuid.UUID          `db:"id" json:"id"`
	UserID       uuid.UUID          `db:"user_id" json:"user_id"`
	SessionToken string             `db:"session_token" json:"session_token"`
	ExpiresAt    pgtype.Timestamptz `db:"expires_at" json:"expires_at"`
	CreatedAt    pgtype.Timestamptz `db:"created_at" json:"created_at"`
}

type Users struct {
	ID        uuid.UUID          `db:"id" json:"id"`
	Email     string             `db:"email" json:"email"`
	Name      string             `db:"name" json:"name"`
	AvatarUrl pgtype.Text        `db:"avatar_url" json:"avatar_url"`
	SpaceID   uuid.UUID          `db:"space_id" json:"space_id"`
	Role      pgtype.Text        `db:"role" json:"role"`
	Settings  []byte             `db:"settings" json:"settings"`
	CreatedAt pgtype.Timestamptz `db:"created_at" json:"created_at"`
	UpdatedAt pgtype.Timestamptz `db:"updated_at" json:"updated_at"`
}
